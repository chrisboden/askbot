quoteText,bookTitle,bookAuthor,tags
There are few sources of energy so powerful as a procrastinating college student.,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,"['graham', 'hackers', 'humor', 'inspirational', 'painters', 'paul']"
Let's start with a test: Do you have any opinions that you would be reluctant to express in front of a group of your peers?,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['what-you-can-t-say']
"If you want to make money at some point, remember this, because this is one of the reasons startups win. Big companies want to decrease the standard deviation of design outcomes because they want to avoid disasters. But when you damp oscillations, you lose the high points as well as the low. This is not a problem for big companies, because they don't win by making great products. Big companies win by sucking less than other big companies. ",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
Object-oriented programming offers a sustainable way to write spaghetti code. It lets you accrete programs as a series of patches.,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['programming']
The main reason nerds are unpopular is that they have other things to think about.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The recipe for great work is: very exacting taste, plus the ability to gratify it.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,"['creation', 'creativity', 'taste', 'work']"
"It's important for nerds to realize, too, that school is not life. School is a strange, artificial thing, half sterile and half feral. It's all-encompassing, like life, but it isn't the real thing. It's only temporary, and if you look, you can see beyond it even while you're still in it.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"if you can imagine someone surpassing you, you should do it yourself.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Paying attention is more important to reliability than moving slowly. Because he pays close attention, a Navy pilot can land a 40,000 lb. aircraft at 140 miles per hour on a pitching carrier deck, at night, more safely than the average teenager can cut a bagel.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,"['advice', 'humor']"
"If you can keep hope and worry balanced, they will drive a project forward the same way your two legs drive a bicycle forward.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['inspirational']
"A startup is like a mosquito. A bear can absorb a hit and a crab is armored against one, but a mosquito is designed for one thing : to score. No energy is wasted on defense. The defense of mosquitos, as a species, is that there are a lot of them, but this is little consolation to the individual mosquito.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If Apple were to grow the iPod into a cell phone with a web browser, Microsoft would be in big trouble.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,"['inspirational', 'prediction']"
"In business, there is nothing more valuable than a technical advantage your competitors don’t understand. In business, as in war, surprise is worth as much as force.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"People who do good work often think that whatever they’re working on is no good. Others see what they’ve done and think it’s wonderful, but the creator sees nothing but flaws. This pattern is no coincidence: worry made the work good.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The same recipe that makes individuals rich makes countries powerful. Let the nerds keep their lunch money, and you rule the world.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Likewise, in any social hierarchy, people unsure of their own position will try to emphasize it by maltreating those they think rank below. I’ve read that this is why poor whites in the United States are the group most hostile to blacks.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Introducing change is like pulling off a bandage : the pain is a memory as soon as you feel it.,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The difference between design and research seems to be a question of new versus good. Design doesn't have to be new, but it has to be good. Research doesn't have to be good, but it has to be new. I think these two paths converge at the top: the best design surpasses its predecessors by using new ideas, and the best research solves problems that are not only new, but worth solving. So ultimately design and research are aiming for the same destination, just approaching it from different directions.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['humor']
"We need a language that lets us scribble and smudge and smear, not a language where you have to sit with a teacup of types balanced on your knee and make polite conversation with a strict old aunt of a compiler.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"You need rich people in your society not so much because in spending their money they create jobs, but because of what they have to do to get rich. I'm not talking about the trickle-down effect here. I'm not saying that if you let Henry Ford get rich, he'll hire you as a waiter at his next party. I'm saying that he'll make you a tractor to replace your horse.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"As for building something users love, here are some general tips. Start by making something clean and simple that you would want to use yourself. Get a version 1.0 out fast, then continue to improve the software, listening closely to users as you do. The customer is always right, but different customers are right about different things; the least sophisticated users show you what you need to simplify and clarify, and the most sophisticated tell you what features you need to add.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Here, as so often, the best defense is a good offense. If you can develop technology that’s simply too hard for competitors to duplicate, you don’t need to rely on other defenses. Start by picking a hard problem, and then at every decision point, take the harder choice.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Before you develop a conscience, torture is amusing.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"So if you can figure out a way to get in a design war with a company big enough that its software is designed by product managers, they’ll never be able to keep up with you. These opportunities are not easy to find, though. It’s hard to engage a big company in a design war, just as it’s hard to engage an opponent inside a castle in hand-to-hand combat.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If Lenin walked around the offices of a company like Yahoo or Intel or Cisco, he’d think communism had won. Everyone would be wearing the same clothes, have the same kind of office (or rather, cubicle) with the same furnishings, and address one another by their first names instead of by honorifics. Everything would seem exactly as he’d predicted, until he looked at their bank accounts. Oops.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,"['humor', 'nonfiction']"
"This is why so many of the best programmers are libertarians. In our world, you sink or swim, and there are no excuses. When those far removed from the creation of wealth — undergraduates, reporters, politicians — hear that the richest 5% of the people have half the total wealth, they tend to think injustice! An experienced programmer would be more likely to think is that all? The top 5% of programmers probably write 99% of the good software.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Use difficulty as a guide not just in selecting the overall aim of your company, but also at decision points along the way. At Via web one of our rules of thumb was run upstairs. Suppose you are a little, nimble guy being chased by a big, fat, bully. You open a door and find yourself in a staircase. Do you go up or down? I say up. The bully can probably run downstairs as fast as you can. Going upstairs his bulk will be more of a disadvantage. Running upstairs is hard for you but even harder for him. What this meant in practice was that we deliberately sought hard problems. If there were two features we could add to our software, both equally valuable in proportion to their difficulty, we’d always take the harder one. Not just because it was more valuable, but because it was harder. We delighted in forcing bigger, slower competitors to follow us over difficult ground. Like guerillas, startups prefer the difficult terrain of the mountains, where the troops of the central government can’t follow. I can remember times when we were just exhausted after wrestling all day with some horrible technical problem. And I’d be delighted, because something that was hard for us would be impossible for our competitors.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The easy, conversational tone of good writing comes only on the eighth rewrite.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
You have to be able to see things from the user’s point of view.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"When you’re forced to be simple, you’re forced to face the real problem. When you can’t deliver ornament, you have to deliver substance",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"In our world, you sink or swim, and there are no excuses.",Hackers & Painters: Big Ideas from the Computer Age,Paul graham,[]
"If you're in a job that feels safe, you are not going to get exceptional, because if there is no danger there is almost certainly no leverage.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
why Europe grew so powerful. Was it something about the geography of Europe? Was it that Europeans are somehow racially superior? Was it their religion? The answer (or at least the proximate cause) may be that the Europeans rode on the crest of a powerful new idea: allowing those who made a lot of money to keep it.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"A restaurant can afford to serve the occasional burnt dinner. But in technology, you cook one thing and that's what everyone eats. So any difference between what people want and what you deliver is multiplied. You please or annoy customers wholesale. The closer you can get to what they want, the more wealth you generate.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"A great programmer, on a roll, could create a million dollars worth of wealth in a couple weeks. A mediocre programmer over the same period will generate zero or even neg- ative wealth (e.g. by introducing bugs).",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"learn to program by looking at good programs — not just at what they do, but at the source code.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"GOOD DESIGN IS SIMPLE. You hear this from math to painting. In math it means that a shorter proof tends to be a better one. Where axioms are concerned, especially, less is more. It means much the same thing in programming. For architects and designers, it means that beauty should depend on a few carefully chosen structural elements rather than a profusion of superficial ornament.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If a writer rewrites an essay, people who read the new version are unlikely to complain that their thoughts have been broken by some newly introduced incompatibility.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['humor']
"Intellectual curiosity was not one of the motives on the FBI’s list. Indeed, the whole concept seemed foreign to them.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"no art, however minor, demands less than total dedication if you want to excel in it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
wonder if anyone in the world works harder at anything than American school kids work at popularity. Navy SEALS and neurosurgery residents seem slackers by comparison.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"I think that, like species, languages will form evolutionary trees, with dead-ends branching off all over. We can see this happening already. Cobol, for all its sometime popularity, does not seem to have any intellectual descendants. It is an evolutionary dead-end — a Neanderthal language. I predict a similar fate for Java. People sometimes send me mail saying, “How can you say that Java won’t turn out to be a successful language? It’s already a successful language.” And I admit that it is, if you measure success by shelf space taken up by books on it, or by the number of undergrads who believe they have to learn it to get a job. When I say Java won’t turn out to be a successful language, I mean something more specific: that Java will turn out to be an evolutionary dead-end, like Cobol.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Partly because teenagers are still half children, and many children are just intrinsically cruel.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"To become more popular, you need to be constantly doing things that bring you close to other popular people, and nothing brings people closer than a common enemy.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Cold War teaches the same lesson as World War II and, for that matter, most wars in recent history. Don’t let a ruling class of warriors and politicians squash the entrepreneurs. The same recipe that makes individuals rich makes countries powerful. Let the nerds keep their lunch money, and you rule the world.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"In England, at least, corruption only became unfashionable (and in fact only started to be called “corruption”) when there started to be other, faster ways to get rich.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
One of the less publicized benefits of the open source movement is that it has made it easier to learn to program.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
looking at things from other people’s point of view is practically the secret of success.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Those in authority tend to be annoyed by hackers’ general attitude of disobedience. But that disobedience is a byproduct of the qualities that make them good programmers.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"This is the kind of possibility that the pointy-haired boss doesn’t even want to think about. And so most of them don’t. Because, you know, when it comes down to it, the pointy-haired boss doesn’t mind if his company gets their ass kicked, so long as no one can prove it’s his fault. The safest plan for him personally is to stick close to the center of the herd.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
Programmers tend to be divided into tribes by the languages they use. More even than by the kinds of programs they write.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Most makers make things for a human audience. And to engage an audience you have to understand what they need.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Users are a double-edged sword. They can help you improve your language, but they can also deter you from improving. So choose your users carefully, and be slow to grow their number. Having users is like optimization: the wise course is to delay it.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['irony']
"Companies often wonder what to outsource and what not to. One possible answer: outsource any job that’s not directly exposed to competitive pressure, because outsourcing it will thereby expose it to competitive pressure. (I mean “outsource” in the sense of hiring another company to do it, not the more specific sense of hiring an overseas company.)",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"It’s easier to get people to fight for an idea. And whichever side wins, their ideas will also be considered to have triumphed, as if God wanted to signal his agreement by selecting that side as the victor.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
We often like to think of World War II as a triumph of freedom over totalitarianism. We conveniently forget that the Soviet Union was also one of the winners.,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Hackers are unruly. That is the essence of hacking. And it is also the essence of Americanness. It is no accident that Silicon Valley is in America, and not France, or Germany, or England, or Japan. In those countries, people color inside the lines.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Could civil liberties really be a cause, rather than just an effect? I think so. I think a society in which people can do and say what they want will also tend to be one in which the most efficient so- lutions win, rather than those sponsored by the most influential people. Authoritarian countries become corrupt; corrupt countries become poor; and poor countries are weak.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If you want to make money at some point, remember this, because this is one of the reasons startups win. Big companies want to decrease the standard deviation of design outcomes because they want to avoid disasters. But when you damp oscillations, you lose the high points as well as the low. This is not a problem for big companies, because they don't win by making great products. Big companies win by sucking less than other big companies.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,"['entrepreneurs', 'entrepreneurship', 'startups']"
"If you’re in a job that feels safe, you are not going to get rich, because if there is no danger there is almost certainly no leverage.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"There are plenty of other ways to get money, including chance, speculation, marriage, inheritance, theft, extortion, fraud, monopoly, graft, lobbying, counterfeiting, and prospecting. Most of the greatest fortunes have probably involved several of these.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"So although there may be, in certain specific moments (like your family, this month) a fixed amount of money available to trade with other people for things you want, there is not a fixed amount of wealth in the world.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The spirit of resistance to government,” Jefferson wrote, “is so valuable on certain occasions, that I wish it always to be kept alive.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The right way to collaborate, I think, is to divide projects into sharply defined modules, each with a definite owner,",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
The statements that make people mad are the ones they worry might be believed. I suspect the statements that make people maddest are those they worry might be true.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"In a big company, you can do what all the other big companies are doing. But a startup can’t do what all the other startups do.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Public school teachers are in much the same position as prison wardens.,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The way to create something beautiful is often to make subtle tweaks to something that already exists, or to combine existing ideas in a slightly new way. This kind of work is hard to convey in a research paper.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
The stated purpose of schools is to educate the kids. But there is no external pressure to do this well.,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"In almost any group of people you’ll find hierarchy. When groups of adults form in the real world, it’s generally for some common purpose, and the leaders end up being those who are best at it. The problem with most schools is, they have no purpose. But hierarchy there must be. And so the kids make one out of nothing.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
A lot of the statements that got people in trouble seem harmless now.,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"You might find contradictory taboos. In one culture it might seem shocking to think x, while in another it was shocking not to. But I think usually the shock is on one side. In one culture x is ok, and in another it’s considered shocking. My hypothesis is that the side that’s shocked is most likely to be the mistaken one.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"To launch a taboo, a group has to be poised halfway between weakness and power. A confident group doesn’t need taboos to protect it. It’s not considered improper to make disparaging remarks about Americans, or the English. And yet a group has to be powerful enough to enforce a taboo.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The government spying on people doesn’t literally make programmers write worse code. It just leads eventually to a world in which bad ideas will win. And because this is so important to hackers, they’re especially sensitive to it. They can sense totalitarianism approaching from a distance, as animals can sense an approaching thunderstorm.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The phrase “personal computer” is part of the language now, but when it was first used it had a deliberately audacious sound, like the phrase “personal satellite” would today.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"It would be pretty easy to write a better word processor than Microsoft Word, for example, but Microsoft, within the castle of their operating system monopoly, probably wouldn’t even notice if you did. The place to fight design wars is in new markets, where no one has yet managed to establish any fortifications. That’s where you can win",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"hackers are makers rather than scientists, the right place to look for metaphors is not in the sciences, but among other kinds of makers. What else can painting teach us about hacking?",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"To write good software you must simultaneously keep two opposing ideas in your head. You need the young hacker’s naive faith in his abilities, and at the same time the veteran’s skepticism. You have to be able to think how hard can it be? with one half of your brain while thinking it will never work with the other.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"At various times and places in history, whether you could accumulate a fortune by creating wealth has been turned on and off. Northern Italy in 800, off (warlords would steal it). Northern Italy in 1100, on. Central France in 1100, off (still feudal). England in 1800, on. England in 1974, off (98% tax on investment income). United States in 1974, on. We’ve even had a twin study: West Germany, on; East Germany, off. In every case, the creation of wealth seems to appear and disappear like the noise of a fan as you switch on and off the prospect of keeping it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Startups are not magic. They don’t change the laws of wealth creation. They just represent a point at the far end of the curve.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Money is a side effect of specialization. In a specialized society, most of the things you need, you can’t make for yourself. If you want a potato or a pencil or a place to live, you have to get it from someone else. How do you get the person who grows the potatoes to give you some? By giving him something he wants in return. But you can’t get very far by trading things directly with the people who need them.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Someone graduating from college thinks, and is told, that he needs to get a job, as if the important thing were becoming a member of an institution. A more direct way to put it would be: you need to start doing something people want. You don’t need to join a company to do that. All a company is is a group of people working together to do something people want. It’s doing something people want that matters, not joining the group.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Technology = Leverage Startups offer anyone a way to be in a situation with measurement and leverage. They allow measurement because they’re small, and they offer leverage because they make money by inventing new technology.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"What made the Florentines rich in 1200 was the discovery of new techniques for making the high-tech product of the time, fine woven cloth. What made the Dutch rich in 1600 was the discovery of shipbuilding and navigation techniques that enabled them to dominate the seas of the Far East.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"It’s obvious that biotech or software startups exist to solve hard technical problems, but I think it will also be found to be true in businesses that don’t seem to be about technology. McDonald’s, for example, grew big by designing a system, the McDonald’s franchise, that could then be reproduced at will all over the face of the earth. A McDonald’s franchise is controlled by rules so precise that it is practically a piece of software. Write once, run everywhere. Ditto for Wal-Mart. Sam Walton got rich not by being a retailer, but by designing a new kind of store.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"And you had better have a convincing explanation of why your technology would be hard to duplicate. Otherwise as soon as some big company becomes aware of it, they’ll make their own, and with their brand name, capital, and distribution clout, they’ll take away your market overnight. You’d be like guerillas caught in the open field by regular army forces.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"A company big enough to acquire startups will be big enough to be fairly conservative, and within the company the people in charge of acquisitions will be among the more conservative, because they are likely to be business school types who joined the company late. They would rather overpay for a safe choice.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"In both cases, what it all comes down to is users. You’d think that a company about to buy you would do a lot of research and decide for themselves how valuable your technology was. Not at all. What they go by is the number of users you have.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Treat a startup as an optimization problem in which performance is measured by number of users.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Steve Jobs saved a company that was in a terminal decline. And not merely in the way a turnaround specialist does, by cutting costs; he had to decide what Apple’s next products should be. Few others could have done it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"It may seem unlikely in principle that one individual could really generate so much more wealth than another. The key to this mystery is to revisit that question, are they really worth 100 of us? Would a basketball team trade one of their players for 100 random people? What would Apple’s next product look like if you replaced Steve Jobs with a committee of 100 random people?6 These things don’t scale linearly. Perhaps the CEO or the professional athlete has only ten times (whatever that means) the skill and determination of an ordinary person. But it makes all the difference that it’s concentrated in one individual.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Starting in the tenth and eleventh centuries, petty nobles and former serfs banded together in towns that gradually became powerful enough to ignore the local feudal lords.10 Like serfs, the middle class made a living largely by creating wealth. (In port cities like Genoa and Pisa, they also engaged in piracy.) But unlike serfs they had an incentive to create a lot of it. Any wealth a serf created belonged to his master. There was not much point in making more than you could hide. Whereas the independence of the townsmen allowed them to keep whatever wealth they created.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Once it became possible to get rich by creating wealth, society as a whole started to get richer very rapidly. Nearly everything we have was created by the middle class. Indeed, the other two classes have effectively disappeared in industrial societies, and their names been given to either end of the middle class. (In the original sense of the word, Bill Gates is middle class.)",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"But it was not till the Industrial Revolution that wealth creation definitively replaced corruption as the best way to get rich. In England, at least, corruption only became unfashionable (and in fact only started to be called “corruption”) when there started to be other, faster ways to get rich.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Seventeenth-century England was much like the third world today, in that government office was a recognized route to wealth. The great fortunes of that time still derived more from what we would now call corruption than from commerce.11 By the nineteenth century that had changed.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Technology had made it possible to create wealth faster than you could steal it. The prototypical rich man of the nineteenth century was not a courtier but an industrialist.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If we were talking about Europe in 1000, or most of the third world today, the standard misquotation would be spot on.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Technology should increase the gap in income, but it seems to decrease other gaps. A hundred years ago, the rich led a different kind of life from ordinary people. They lived in houses full of servants, wore elaborately uncomfortable clothes, and travelled about in carriages drawn by teams of horses which themselves required their own houses and servants. Now, thanks to technology, the rich live more like the average person.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"you need to start doing something people want. You don’t need to join a company to do that. All a company is is a group of people working together to do something people want. It’s doing something people want that matters, not joining the group.6",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"You need rich people in your society not so much because in spending their money they create jobs, but because of what they have to do to get rich.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Building something by gradually refining a prototype is good for morale because it keeps you engaged.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
A painting is never finished. You just stop working on it.” This idea will be familiar to anyone who has worked on software.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"So if you can make something that appeals to people today and would also have appealed to people in 1500, there is a good chance it will appeal to people in 2500.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"It takes confidence to throw work away. You have to be able to think, there’s more where that came from.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
In practice I think it’s easier to see ugliness than to imagine beauty.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"some of those most vocal on the subject of wealth — university students, heirs, professors, politicians, and journalists — have the least experience creating it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
The advantage of a medium of exchange is that it makes trade work. The disadvantage is that it tends to obscure what trade really means.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
People think that what a business does is make money. But money is just the intermediate stage — just a shorthand — for whatever people want. What most businesses really do is make wealth. They do something people want.4,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The people most likely to grasp that wealth can be created are the ones who are good at making things, the craftsmen. Their hand-made objects become store-bought ones.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"A great programmer, on a roll, could create a million dollars worth of wealth in a couple weeks. A mediocre programmer over the same period will generate zero or even negative wealth (e.g. by introducing bugs). This is why so many of the best programmers are libertarians. In our world, you sink or swim, and there are no excuses.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"But here there is another layer that tends to obscure the underlying reality. In a company, the work you do is averaged together with a lot of other people’s.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"A job means doing something people want, averaged together with everyone else in that company.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
That averaging gets to be a problem. I think the single biggest problem afflicting large companies is the difficulty of assigning a value to each person’s work.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Measurement and Leverage To get rich you need to get yourself in a situation with two things, measurement and leverage. You need to be in a position where your performance can be measured, or there is no way to get paid more by doing more. And you have to have leverage, in the sense that the decisions you make have a big effect.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"What is technology? It’s technique. It’s the way we all do things. And when you discover a new way to do things, its value is multiplied by all the people who use it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
People think that what a business does is make money. But money is just the intermediate stage — just a shorthand — for whatever people want. What most businesses really do is make wealth. They do something people want.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
It’s not when people notice you’re there that they pay attention; it’s when they notice you’re still there.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Empathy doesn’t necessarily mean being self-sacrificing. Far from it. Understanding how someone else sees things doesn’t imply that you’ll act in his interest; in some situations — in war, for example — you want to do exactly the opposite.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
The difference between design and research seems to be a question of new versus good.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"beautiful things don’t always make the best subjects for papers. Number one, research must be original — and as anyone who has written a PhD dissertation knows, the way to be sure you’re exploring virgin territory is to stake out a piece of ground that no one wants. Number two, research must be substantial — and awkward systems yield meatier papers, because you can write about the obstacles you have to overcome in order to get things done. Nothing yields meaty problems like starting with the wrong assumptions.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
You can’t let the suits make technical decisions for you.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If you start a startup, don’t design your product to please VCs or potential acquirers. Design your product to please the users. If you win the users, everything else will follow.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Of all tyrannies, a tyranny exercised for the good of its victims may be the most oppressive. — C.S.LEWIS",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
The answer (or at least the proximate cause) may be that the Europeans rode on the crest of a powerful new idea: allowing those who made a lot of money to keep it.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Nearly all makers have day jobs early in their careers.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"think language designers would do better to consider their target user to be a genius who will need to do things they never anticipated, rather than a bumbler who needs to be protected from himself. The bumbler will shoot himself in the foot anyway.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"if the hacker is a creator, we have to take inspiration into account.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Let yourself be second-guessed. When you make any tool, people use it in ways you didn’t intend, and this is especially true of a highly articulated tool like a programming language.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
A good programming language should have features that make the kind of people who use the phrase “software engineering” shake their heads disapprovingly.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"There are only two things you have to know about business: build something users love, and make more than you spend.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"To write good software you must simultaneously keep two opposing ideas in your head. You need the young hacker’s naive faith in his abilities, and at the same time the veteran’s skepticism.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The customer is always right, but different customers are right about different things; the least sophisticated users show you what you need to simplify and clarify, and the most sophisticated tell you what features you need to add.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"There are only two things you have to know about business: build something users love, and make more than you spend. If you get these two right, you’ll be ahead of most startups. You can figure out the rest as you go.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Like painting, most software is intended for a human audience. And so hackers, like painters, must have empathy to do really great work. You have to be able to see things from the user’s point of view.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If I had a choice of living in a society where I was materially much better off than I am now, but was among the poorest, or in one where I was the richest, but much worse off than I am now, I'd take the first option. If I had children, it would arguably be immoral not to. It's absolute poverty you want to avoid, not relative poverty. If, as the evidence so far implies, you have to have one or the other in your society, take relative poverty.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Everyone in the sciences secretly believes that mathematicians are smarter than they are. I think mathematicians also believe this. At,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Part of what software has to do is explain itself. So,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Good design looks easy. Like great athletes, great designers make it look easy. Mostly this is an illusion.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Unknowing imitation is almost a recipe for bad design. If you don’t know where your ideas are coming from, you’re probably imitating an imitator.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
In practice I think it’s easier to see ugliness than to imagine beauty. Most of the people who’ve made beautiful things seem to have done it by fixing something they thought ugly.,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"I’ve programmed in all kinds of languages, said the tough old hacker as he eased up to the bar, and it don’t matter which you use... This is nonsense, of course. There is a world of difference between, say, Fortran I and the latest version of Perl or for that matter between early versions of Perl and the latest version of Perl. But the tough old hacker may himself believe what he’s saying. It’s possible to write the same primitive Pascal-like programs in almost every language. If you only ever eat at McDonald’s, it will seem that food is much the same in every country.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Cobol, for all its sometime popularity, does not seem to have any intellectual descendants. It is an evolutionary dead- end a Neanderthal language.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The people most likely to grasp that wealth can be created are the ones who are good at making things, the craftsmen. Their hand-made objects become store-bought ones. But with the rise of industrialization there are fewer and fewer craftsmen. One of the biggest remaining groups is computer programmers.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"I don’t predict the demise of object-oriented programming, by the way. Object-oriented programming offers a sustainable way to write spaghetti code.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"And the reason everyone doesn’t use Listp is that programming languages are not merely technologies, but habits of mind as well, and nothing changes slower.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If you can’t find ten Lisp hackers, then your company is probably based in the wrong city for developing software",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If language A has an operator for removing spaces from strings and language B doesn’t, that probably doesn’t make A more powerful, because you can probably write a subroutine to do it in B. But if A supports, say, recursion, and B doesn’t, that’s not likely to be something you can fix by writing library functions.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"I’d like to propose an alternative idea: that in a modern society, increasing variation in income is a sign of health. Technology seems to increase the variation in productivity at faster than linear rates. If we don’t see corresponding variation in income, there are three possible explanations: (a) that technical innovation has stopped, (b) that the people who would create the most wealth aren’t doing it, or (c) that they aren’t getting paid for it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Paul Graham is someone who tends to make bold statements about innovation and the economics of technology. He co-founded Y-Combinator and what would later become Yahoo! Store. As someone who studied painting and computer science, he writes from a unique perspective as is displayed in Hackers & Painters and his well-known essays. “How to Start a Startup” offered me a basic toolkit to grasp that people, great execution and understanding what the customer really wants, are more important than a brilliant idea. “Why Smart People Have Bad Ideas” let me know that although some founders can seem promising, they may have simply chosen the wrong problem to solve and it may be best to wait for their next new iteration—or business—entirely.","#BreakIntoVC: How to Break Into Venture Capital And Think Like an Investor Whether You're a Student, Entrepreneur or Working Professional",Bradley Miles,[]
Empathy is probably the single most important difference between a good hacker and a great one.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Lack of empathy is associated with intelligence, to the point that there is even something of a fashion for it in some places. But",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Few smart kids can spare the attention that popularity requires. Unless they also happen to be good-looking, natural athletes, or siblings of popular kids, they’ll tend to become nerds.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If you want to make money, you tend to be forced to work on problems that are too nasty for anyone to solve for free.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"I don’t predict the demise of object-oriented programming, by the way. Though I don’t think it has much to offer good programmers, except in certain specialized domains, it is irresistible to large organizations. Object-oriented programming offers a sustainable way to write spaghetti code. It lets you accrete programs as a series of patches. Large organizations always tend to develop software this way, and I expect this to be as true in a hundred years as it is today.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"So the optimal plan, if you can manage it, is to have a few trusted friends you can speak openly to. This is not just a way to develop ideas; it’s also a good rule of thumb for choosing friends. The people you can say heretical things to without getting jumped on are also the most interesting to know.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If you want to create wealth (in the narrow technical sense of not starving), then you should be especially skeptical about any plan that centers on things you like doing.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
A large part of what big companies pay extra for is the cost of selling expensive things to them.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Many people feel confused and depressed in their early twenties. Life seemed so much more fun in college. Well, of course it was. Don't be fooled by the surface similarities. You've gone from guest to servant. It's possible to have fun in this new world. Among other things, you now get to go behind the doors that say ""authorized personnel only."" But the change is a shock at first, and all the worse if you are not consciously aware of it.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"This is a good plan for life in general. If you have two choices, choose the harder. If you're trying to decide whether to go out running or sit home and watch TV, go running. Probably the reason this trick works so well is that when you have two choices and one is harder, the only reason you're even considering the other is laziness. You know in the back of your mind what's the right thing to do, and this trick merely forces you to acknowledge it.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['life-attitude']
"Venture capitalists have a list of danger signs to watch out for. Near the top is the company run by techno-weenies who are obsessed with solving interesting technical problems, instead of making users happy.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Get a version 1.0 out there as soon as you can. Until you have some users to measure, you're optimizing based on guesses.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Suppose you are a little, nimble guy being chased by a big, fat, bully. You open a door and find yourself in a staircase. Do you go up or down? I say up. The bully can probably run downstairs as fast as you can. Going upstairs his bulk will be more of a disadvantage. Running upstairs is hard for you but even harder for him.",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,[]
"no art, however minor, demands less than total dedication if you want to excel in it.”1",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"In reality, wealth is measured by what one delivers, not how much effort it costs. If I paint someone’s house, the owner shouldn’t pay me extra for doing it with a toothbrush.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The third worry of the pointy-haired boss, the difficulty of hiring programmers, I think is a red herring. How many hackers do you need to hire, after all? Surely by now we all know that software is best developed by teams of less than ten people. And you shouldn’t have trouble hiring hackers on that scale for any language anyone has ever heard of. If you can’t find ten Lisp hackers, then your company is probably based in the wrong city for developing software. In fact, choosing a more powerful language probably decreases the size of the team you need, because (a) if you use a more powerful language, you probably won’t need as many hackers, and (b) hackers who work in more advanced languages are likely to be smarter.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
The inhabitants of all those worlds are trapped in little bubbles where nothing they do can have more than a local effect. Naturally these societies degenerate into savagery.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If I had a choice of living in a society where I was materially much better off than I am now, but was among the poorest, or in one where I was the richest, but much worse off than I am now, I’d take the first option. If I had children, it would arguably be immoral not to. It’s absolute poverty you want to avoid, not relative poverty.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Sometimes the current even starts to flow in the other direction: sometimes, particularly in university math and science departments, nerds deliberately exaggerate their awkwardness in order to seem smarter.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
it was not till the Industrial Revolution that wealth creation definitively replaced corruption as the best way to get rich.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Intolerance for ugliness is not in itself enough. You have to understand a field well before you develop a good nose for what needs fixing. You have to do your homework. But as you become expert in a field, you’ll start to hear little voices saying, What a hack! There must be a better way. Don’t ignore those voices. Cultivate them. The recipe for great work is: very exacting taste, plus the ability to gratify it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"You can’t trust the opinions of the others, because of the Blub paradox: they’re satisfied with whatever language they happen to use, because it dictates the way they think about programs.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"I suspect few housing projects in the US were designed by architects who expected to live in them. You see the same thing in programming languages. C, Lisp, and Smalltalk were created for their own designers to use. Cobol, Ada, and Javawere created for other people to use. If you think you’re designing",Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['nonfiction']
"It’s hard to predict what life will be like in a hundred years. There are only a few things we can say with certainty. We know that everyone will drive flying cars, that zoning laws will be relaxed to allow buildings hundreds of stories tall, that it will be dark most of the time, and that women will all be trained in the martial arts. Here I want to zoom in on one detail of this picture. What kind of programming language will they use to write the software controlling those flying cars?",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If you suppress variations in income, whether by stealing private fortunes, as feudal rulers used to do, or by taxing them away, as some modern governments have done, the result always seems to be the same. Society as a whole ends up poorer.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"I’m not saying that if you let Henry Ford get rich, he’ll hire you as a waiter at his next party. I’m saying that he’ll make you a tractor to replace your horse.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"I think a society in which people can do and say what they want will also tend to be one in which the most efficient solutions win, rather than those sponsored by the most influential people.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"and for the same reason, as a bunch of guys who get together to go hunting. They don’t actually hate you. They just need something to chase.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Great work tends to grow out of ideas that others have overlooked, and no idea is so overlooked as one that’s unthinkable. Natural",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If you look at the dominant technologies today, you’ll find that most of them grew organically.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"In hacking, like painting, work comes in cycles. Sometimes you get excited about a new project and you want to work sixteen hours a day on it. Other times nothing seems interesting.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Like painting, most software is intended for a human audience. And so hackers, like painters, must have empathy to do really great work.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"If you look at history, it seems that most people who got rich by creating wealth did it by developing new technology. You just can’t fry eggs or cut hair fast enough.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Number of users may not be the perfect test, but it will be very close. It’s what acquirers care about. It’s what revenues depend on. It’s what makes competitors unhappy. It’s what impresses reporters, and potential new users.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Get a version 1.0 out there as soon as you can. Until you have some users to measure, you’re optimizing based on guesses.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Naturally wealth had a bad reputation. Two things changed. The first was the rule of law. For most of the world’s history, if you did somehow accumulate a fortune, the ruler or his henchmen would find a way to steal it. But in medieval Europe something new happened. A new class of merchants and manufacturers began to collect in towns.10 Together they were able to withstand the local feudal lord.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"This was naturally a great incentive, and possibly indeed the main cause of the second big change, industrialization. A great deal has been written about the causes of the Industrial Revolution. But surely a necessary, if not sufficient, condition was that people who made fortunes be able to enjoy them in peace.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"The problem with working slowly is not just that technical innovation happens slowly. It’s that it tends not to happen at all. It’s only when you’re deliberately looking for hard problems, as a way to use speed to the greatest advantage, that you take on this kind of project. Developing new technology is a pain in the ass. It is, as Edison said, one percent inspiration and ninety-nine percent perspiration. Without the incentive of wealth, no one wants to do it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Startups are not just something that happened in Silicon Valley in the last couple decades. Since it became possible to get rich by creating wealth, everyone who has done it has used essentially the same recipe: measurement and leverage, where measurement comes from working with a small group, and leverage from developing new techniques. The recipe was the same in Florence in 1200 as it is in Santa Clara today.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Understanding this may help to answer an important question: why Europe grew so powerful. Was it something about the geography of Europe? Was it that Europeans are somehow racially superior? Was it their religion? The answer (or at least the proximate cause) may be that the Europeans rode on the crest of a powerful new idea: allowing those who made a lot of money to keep it.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Once you’re allowed to do that, people who want to get rich can do it by generating wealth instead of stealing it.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
The way ro really do big things seems to be to start with deceptively small things,Hackers & Painters: Big Ideas from the Computer Age,Paul Graham,['self-improvement']
"the way to get rich was not to create wealth, but to serve a ruler powerful enough to appropriate it. This started to change in Europe with the rise of the middle class.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Now we think of the middle class as people who are neither rich nor poor, but originally they were a distinct group. In a feudal society, there are just two classes: a warrior aristocracy, and the serfs who work their estates. The middle class were a new, third group who lived in towns and supported themselves by manufacturing and trade.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"When I was a kid I was constantly being told to look at things from someone else’s point of view. What this always meant in practice was to do what someone else wanted, instead of what I wanted. This of course gave empathy a bad name, and I made a point of not cultivating it. Boy, was I wrong. It turns out that looking at things from other people’s point of view is practically the secret of success. Empathy doesn’t necessarily mean being self-sacrificing. Far from it. Understanding how someone else sees things doesn’t imply that you’ll act in his interest; in some situations — in war, for example — you want to do exactly the opposite.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"My reply to Paul Graham’s comment on Hacker News seems like a summary worth repeating: There’s a difference between: Passing neutral judgment; Declining to invest marginal resources; Pretending that either of the above is a mark of deep wisdom, maturity, and a superior vantage point; with the corresponding implication that the original sides occupy lower vantage points that are not importantly different from up there.",Rationality: From AI to Zombies,Eliezer Yudkowsky,[]
"Most struggles, whatever they’re really about, will be cast as struggles between competing ideas. The",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
Brand is the residue left as the substantive differences between rich and poor evaporate.,Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"pointy-haired boss doesn’t mind if his company gets their ass kicked, so long as no one can prove it’s his fault.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
"Number 1, languages vary in power. Number 2, most managers deliberately ignore this. Between them, these two facts are literally a recipe for making money. ITA is an example of this recipe in action. If you want to win in a software business, just take on the hardest problem you can find, use the most powerful language you can get, and wait for your competitors’ pointy-haired bosses to revert to the mean.",Hackers and Painters: Big Ideas from the Computer Age,Paul Graham,[]
